import { SvelteComponent } from "svelte";
import type * as THREE from 'three';
import { type Events, type Slots } from '@threlte/core';
declare const __propDef: {
    props: {
        ref?: THREE.Group<THREE.Object3DEventMap> | undefined;
        actions?: import("@threlte/core").CurrentWritable<Partial<Record<"1H_Melee_Attack_Chop" | "1H_Melee_Attack_Slice_Diagonal" | "1H_Melee_Attack_Slice_Horizontal" | "1H_Melee_Attack_Stab" | "1H_Ranged_Aiming" | "1H_Ranged_Reload" | "1H_Ranged_Shoot" | "1H_Ranged_Shooting" | "2H_Melee_Attack_Chop" | "2H_Melee_Attack_Slice" | "2H_Melee_Attack_Spin" | "2H_Melee_Attack_Spinning" | "2H_Melee_Attack_Stab" | "2H_Melee_Idle" | "2H_Ranged_Aiming" | "2H_Ranged_Reload" | "2H_Ranged_Shoot" | "2H_Ranged_Shooting" | "Block" | "Block_Attack" | "Block_Hit" | "Blocking" | "Cheer" | "Death_A" | "Death_A_Pose" | "Death_B" | "Death_B_Pose" | "Dodge_Backward" | "Dodge_Forward" | "Dodge_Left" | "Dodge_Right" | "Dualwield_Melee_Attack_Chop" | "Dualwield_Melee_Attack_Slice" | "Dualwield_Melee_Attack_Stab" | "Hit_A" | "Hit_B" | "Idle" | "Interact" | "Jump_Full_Long" | "Jump_Full_Short" | "Jump_Idle" | "Jump_Land" | "Jump_Start" | "Lie_Down" | "Lie_Idle" | "Lie_Pose" | "Lie_StandUp" | "PickUp" | "Running_A" | "Running_B" | "Running_Strafe_Left" | "Running_Strafe_Right" | "Sit_Chair_Down" | "Sit_Chair_Idle" | "Sit_Chair_Pose" | "Sit_Chair_StandUp" | "Sit_Floor_Down" | "Sit_Floor_Idle" | "Sit_Floor_Pose" | "Sit_Floor_StandUp" | "Spellcast_Long" | "Spellcast_Raise" | "Spellcast_Shoot" | "Spellcasting" | "T-Pose" | "Throw" | "Unarmed_Idle" | "Unarmed_Melee_Attack_Kick" | "Unarmed_Melee_Attack_Punch_A" | "Unarmed_Melee_Attack_Punch_B" | "Unarmed_Pose" | "Use_Item" | "Walking_A" | "Walking_B" | "Walking_Backwards" | "Walking_C", THREE.AnimationAction>>> | undefined;
        mixer?: THREE.AnimationMixer | undefined;
    } & import("@threlte/core/dist/components/T/types").AnyProps & import("@threlte/core/dist/components/T/types").DisposableProps & import("@threlte/core/dist/components/T/types").RefProps<THREE.Group<THREE.Object3DEventMap>> & import("@threlte/core/dist/components/T/types").BaseProps<THREE.Group<THREE.Object3DEventMap>> & Record<string, unknown> & Partial<Omit<{
        readonly isGroup?: true | undefined;
        readonly type?: string | undefined;
        readonly isObject3D?: true | undefined;
        readonly id?: number | undefined;
        uuid?: string | undefined;
        name?: string | undefined;
        parent?: THREE.Object3D<THREE.Object3DEventMap> | null | undefined;
        children?: THREE.Object3D<THREE.Object3DEventMap>[] | undefined;
        up?: number | [x: number, y: number, z: number] | undefined;
        readonly position?: number | [x: number, y: number, z: number] | undefined;
        readonly rotation?: number | [x: number, y: number, z: number, order?: THREE.EulerOrder | undefined] | undefined;
        readonly quaternion?: number | [x: number, y: number, z: number, w: number] | undefined;
        readonly scale?: number | [x: number, y: number, z: number] | undefined;
        readonly modelViewMatrix?: number | [n11: number, n12: number, n13: number, n14: number, n21: number, n22: number, n23: number, n24: number, n31: number, n32: number, n33: number, n34: number, n41: number, n42: number, n43: number, n44: number] | undefined;
        readonly normalMatrix?: number | [n11: number, n12: number, n13: number, n21: number, n22: number, n23: number, n31: number, n32: number, n33: number] | undefined;
        matrix?: number | [n11: number, n12: number, n13: number, n14: number, n21: number, n22: number, n23: number, n24: number, n31: number, n32: number, n33: number, n34: number, n41: number, n42: number, n43: number, n44: number] | undefined;
        matrixWorld?: number | [n11: number, n12: number, n13: number, n14: number, n21: number, n22: number, n23: number, n24: number, n31: number, n32: number, n33: number, n34: number, n41: number, n42: number, n43: number, n44: number] | undefined;
        matrixAutoUpdate?: boolean | undefined;
        matrixWorldAutoUpdate?: boolean | undefined;
        matrixWorldNeedsUpdate?: boolean | undefined;
        layers?: number | [layer: number] | undefined;
        visible?: boolean | undefined;
        castShadow?: boolean | undefined;
        receiveShadow?: boolean | undefined;
        frustumCulled?: boolean | undefined;
        renderOrder?: number | undefined;
        animations?: THREE.AnimationClip[] | undefined;
        userData?: Record<string, any> | undefined;
        customDepthMaterial?: THREE.Material | undefined;
        customDistanceMaterial?: THREE.Material | undefined;
        onBeforeShadow?: undefined;
        onAfterShadow?: undefined;
        onBeforeRender?: undefined;
        onAfterRender?: undefined;
        applyMatrix4?: undefined;
        applyQuaternion?: undefined;
        setRotationFromAxisAngle?: undefined;
        setRotationFromEuler?: undefined;
        setRotationFromMatrix?: undefined;
        setRotationFromQuaternion?: undefined;
        rotateOnAxis?: undefined;
        rotateOnWorldAxis?: undefined;
        rotateX?: undefined;
        rotateY?: undefined;
        rotateZ?: undefined;
        translateOnAxis?: undefined;
        translateX?: undefined;
        translateY?: undefined;
        translateZ?: undefined;
        localToWorld?: undefined;
        worldToLocal?: undefined;
        lookAt?: undefined;
        add?: undefined;
        remove?: undefined;
        removeFromParent?: undefined;
        clear?: undefined;
        attach?: undefined;
        getObjectById?: undefined;
        getObjectByName?: undefined;
        getObjectByProperty?: undefined;
        getObjectsByProperty?: undefined;
        getWorldPosition?: undefined;
        getWorldQuaternion?: undefined;
        getWorldScale?: undefined;
        getWorldDirection?: undefined;
        raycast?: undefined;
        traverse?: undefined;
        traverseVisible?: undefined;
        traverseAncestors?: undefined;
        updateMatrix?: undefined;
        updateMatrixWorld?: undefined;
        updateWorldMatrix?: undefined;
        toJSON?: undefined;
        clone?: undefined;
        copy?: undefined;
        addEventListener?: undefined;
        hasEventListener?: undefined;
        removeEventListener?: undefined;
        dispatchEvent?: undefined;
    }, "type" | "manual" | "name" | "lookAt" | "args" | "attach" | "makeDefault" | "id" | "children" | `is${string}` | "parent" | "uuid" | "onBeforeShadow" | "onAfterShadow" | "onBeforeRender" | "onAfterRender" | "applyMatrix4" | "applyQuaternion" | "setRotationFromAxisAngle" | "setRotationFromEuler" | "setRotationFromMatrix" | "setRotationFromQuaternion" | "rotateOnAxis" | "rotateOnWorldAxis" | "rotateX" | "rotateY" | "rotateZ" | "translateOnAxis" | "translateX" | "translateY" | "translateZ" | "localToWorld" | "worldToLocal" | "add" | "remove" | "removeFromParent" | "clear" | "getObjectById" | "getObjectByName" | "getObjectByProperty" | "getObjectsByProperty" | "getWorldPosition" | "getWorldQuaternion" | "getWorldScale" | "getWorldDirection" | "raycast" | "traverse" | "traverseVisible" | "traverseAncestors" | "updateMatrix" | "updateMatrixWorld" | "updateWorldMatrix" | "toJSON" | "clone" | "copy" | "addEventListener" | "hasEventListener" | "removeEventListener" | "dispatchEvent" | undefined>>;
    slots: Slots<THREE.Group<THREE.Object3DEventMap>> & {
        fallback: {};
        error: {
            error: any;
        };
    };
    events: Events<THREE.Group<THREE.Object3DEventMap>>;
};
export type RogueProps = typeof __propDef.props;
export type RogueEvents = typeof __propDef.events;
export type RogueSlots = typeof __propDef.slots;
export default class Rogue extends SvelteComponent<RogueProps, RogueEvents, RogueSlots> {
    get ref(): THREE.Group<THREE.Object3DEventMap> & THREE.Group<THREE.Object3DEventMap>;
}
export {};
